// 新しいキャラクタークラスの雛形を作成するためのサンプルコード
// このクラスを使って、キャラクターのステータスを設定し、描画する方法を示しています。星マークがついていないところはコピペのままで大丈夫です。

//クラス名は好きな名前をつけてあげてください。
class hamario extends Character {
  // (コンストラクタ：キャラクターの初期化を行う)
  hamario(float x, float y, CharacterCountManager countManager) {
    // (スーパークラス（Character）のコンストラクタを呼び出す。)
    //キャラクター名、位置、属性を設定する
    
    /*☆ここは設定してください。⭐☆*/
    super("hamario", x, y, 0, countManager); // 属性0はFire, 属性1はWater, 属性2はGrass
    /*☆                   ⭐☆*/
  }

  // キャラクターのステータスを初期化するメソッド
  void initializeStats() {
    /*☆ここは設定してください。⭐☆*/
    //全部で合計200までしか値は振れません。
    this.hp = 150;           // HPを100に設定 (HPは1〜200まで)
    this.attackPower = 25;   // 攻撃力を50に設定 (攻撃力は1〜100まで)
    this.speed = 25;         // 速度を50に設定 (速度は1〜100まで)
    /*                    ⭐☆*/
    
    //どれか一つでも満たさない要素があるとエラーを吐きます。
  }

  // キャラクターの表示メソッド：キャラクターを画面に描画する。
  /* ここのキャラクターを表示するプログラムは好きな描画プログラムを使って構いません。しかし, x,yを用いて描画してください。*/
  void display() {
     /*☆ここは設定してください。⭐☆*/
    /* 以下：例文ソースコードです。
    fill(255, 0, 0);         // キャラクターの塗りの色を赤に設定
    stroke(200, 0, 0);       // キャラクターの枠線の色を濃い赤に設定
    strokeWeight(3);         // 枠線の太さを3に設定

    // キャラクターの形状を定義し、描画する
    beginShape();            // 新しい形状を開始
    vertex(x, y);            // 頂点の位置（x, y）を設定
    vertex(x + 25, y - 40);  // 頂点の位置（x + 25, y - 40）を設定
    vertex(x + 50, y);       // 頂点の位置（x + 50, y）を設定
    vertex(x + 35, y + 50);  // 頂点の位置（x + 35, y + 50）を設定
    vertex(x + 15, y + 50);  // 頂点の位置（x + 15, y + 50）を設定
    endShape(CLOSE);         // 形状の描画を終了し、閉じた形にする
    */
    /*                    ⭐☆*/
  noStroke();
  fill(0,0,255);
  rect(x+30,y-8,30,60);
  fill(76,46,48);
  rect(x+18,y+42,21,15);
  rect(x+54,y+42,21,15);
  fill(252,226,196);
  ellipse(x+45,y-36,90,90);
  fill(0);
  ellipse(x+24,y-36-6,6,6);
  ellipse(x+66,y-36-6,6,6);
  ellipse(x+45,y-36+24,6,6);
  textSize(36);
  text("M",x+35,y-36-12);  
  }
}
